import{y as a,A as n,by as d,bz as u,P as l}from"./index-EUprzwra.js";import{r as g}from"./FeatureLayerView2D-LEdMxwzU.js";import"./EffectView-D3iwflfO.js";import"./featureConversionUtils-Ct3FYZwv.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CCxrukMf.js";import"./highlightReasons-D6enWuKJ.js";import"./LayerView-7AxaOlua.js";import"./Container-OlF0IIYq.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-BV3oGXtb.js";import"./TechniqueInstance-z7leZNqY.js";import"./UpdateTracking2D-BGTIW_EZ.js";import"./BindType-BmZEZMMh.js";import"./Util-B1lMa86Q.js";import"./Program-BkctIWEa.js";import"./LabelMetric-CU0_ccr2.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-NGSCEu8f.js";import"./TileContainer-7eUg751H.js";import"./WGLContainer-mHK04iKQ.js";import"./ProgramTemplate--hYNMbku.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-B4dkoPrF.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./CIMSymbolHelper-ZrCeDp3R.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BZGNmWcd.js";import"./GeometryUtils-B2v2Fo_F.js";import"./Rect-CUzevAry.js";import"./SDFHelper-BOkMe7oY.js";import"./floatRGBA-Cp_eBvVG.js";import"./FeatureCommandQueue-B8JH4NAT.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-BfAJXgov.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DeDLuzQF.js";import"./RefreshableLayerView-DXhQ-75E.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ei=i;export{ei as default};
