import{b5 as p,s,Q as i}from"./index-CZMOWvs5.js";import{l as n}from"./MeshVertexAttributes-BN3-5Asy.js";import{M as c}from"./vertexSpaceConversion-Ch89w09n.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-vK7HjIif.js";import"./computeTranslationToOriginAndRotation-CGKia4VS.js";import"./meshVertexSpaceUtils-CtkRxfbd.js";import"./MeshLocalVertexSpace-BfPpK4t7.js";import"./vec3-B1CLISOL.js";import"./projection-C2qNhU5K.js";import"./DoubleArray-CLCMKNyg.js";import"./BufferView-DpHsgmrh.js";import"./vec4-C1IX6-CA.js";async function S(t,r,m){await Promise.resolve(),p(m);const o=c(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{S as convertMeshVertexSpace};
