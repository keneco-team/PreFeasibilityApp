const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./knowledgeGraphService-CHLo3WaP.js","./index-C5fQgfn7.js","./index-D5mPmoJv.css","./GraphQueryStreaming-BdIvYtHZ.js"])))=>i.map(i=>d[i]);
import{an as I,_ as k,M as K,bI as N,bJ as V,bK as M,bS as x,eD as C,eE as Q,am as U,eS as P,eU as j,eV as L}from"./index-C5fQgfn7.js";import{a as T,b as u,r as c,I as O,m as W,G as y,ab as H,P as X,N as D,U as _,A as z,E as A,X as E,w as B,v as Y,ac as Z,ad as q,ae as $}from"./arcadeUtils-pkZEsjDp.js";import{l as tt}from"./portalUtils-CH6pNQff.js";import{s as et,m as nt,t as at,p as rt,c as it}from"./GraphQueryStreaming-BdIvYtHZ.js";import"./TimeOnly-Cx0Hk6B_.js";import"./ImmutableArray-BPVd6ESQ.js";import"./number-D2qc8PbM.js";import"./featureConversionUtils-DMSUDuty.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";let f=null;async function ot(t){const e=K.geometryServiceUrl??"";if(!e){N()||await V();for(const n of t)n.container[n.indexer]=M(n.container[n.indexer],x.WGS84);return}const a=t.map(n=>n.container[n.indexer]),i=new C({geometries:a,outSpatialReference:x.WGS84}),s=await Q(e,i);for(let n=0;n<s.length;n++){const r=t[n];r.container[r.indexer]=s[n]}}async function G(t,e){const a=new U({portal:t,id:e});return await a.load(),f===null&&(f=await k(()=>import("./knowledgeGraphService-CHLo3WaP.js").then(i=>i.k),__vite__mapDeps([0,1,2,3]),import.meta.url)),await f.fetchKnowledgeGraph(a.url)}function R(t,e,a,i,s){if(t===null)return null;if(y(t)||A(t))return t;if(E(t)||E(t))return t.toJSDate();if(B(t))return t.toStorageFormat();if(Y(t))return t.toStorageString();if(Z(t)){const n={};for(const r of t.keys())n[r]=R(t.field(r),e,a,i,s),n[r]instanceof P&&s.push({container:n,indexer:r});return n}if(_(t)){const n=t.map(r=>R(r,e,a,i,s));for(let r=0;r<n.length;r++)n[r]instanceof P&&s.push({container:n,indexer:r});return n}return q(t)?t.spatialReference.isWGS84?t:t.spatialReference.isWebMercator&&e?j(t):t:void 0}function st(t,e){if(!t)return t;if(t.spatialReference.isWGS84&&e.spatialReference.isWebMercator)return L(t);if(t.spatialReference.equals(e.spatialReference))return t;throw new u(e,c.WrongSpatialReference,null)}function v(t,e){if(!t)return null;const a={};for(const i in t)a[i]=g(t[i],e);return a}function g(t,e){return t===null?null:_(t)?t.map(a=>g(a,e)):t instanceof nt?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:v(t.properties,e)}:t instanceof at?{graphType:"object",properties:v(t.properties,e)}:t instanceof rt?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:v(t.properties,e)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(a=>g(a,e)):null}:q(t)?st(t,e):y(t)||A(t)||$(t)?t:null}function St(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(e,a){return t.standardFunctionAsync(e,a,(i,s,n)=>{var m,d;if(T(n,2,2,e,a),n[0]===null)throw new u(e,c.PortalRequired,a);if(n[0]instanceof O){const p=W(n[1]);let h;return h=(m=e.services)!=null&&m.portal?e.services.portal:I.getDefault(),G(tt(n[0],h),p)}if(y(n[0])===!1)throw new u(e,c.InvalidParameter,a);const r=W(n[0]);return G(((d=e.services)==null?void 0:d.portal)??I.getDefault(),r)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(e,a){return t.standardFunctionAsync(e,a,async(i,s,n)=>{var b;T(n,2,4,e,a);const r=n[0];if(!H(r))throw new u(e,c.InvalidParameter,a);const m=n[1];if(!y(m))throw new u(e,c.InvalidParameter,a);f===null&&(f=await k(()=>import("./knowledgeGraphService-CHLo3WaP.js").then(o=>o.k),__vite__mapDeps([0,1,2,3]),import.meta.url));let d=null;const p=X(n[2],null);if(!(p instanceof D||p===null))throw new u(e,c.InvalidParameter,a);if(p){let o=[];d=R(p,!0,!1,e,o),o=o.filter(l=>!l.container[l.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const h=new et({openCypherQuery:m,bindParameters:d});(((b=r==null?void 0:r.serviceDefinition)==null?void 0:b.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=e.spatialReference);const F=(await f.executeQueryStreaming(r,h)).resultRowsStream.getReader(),S=[];try{for(;;){const{done:o,value:l}=await F.read();if(o)break;if(_(l))for(const w of l)S.push(g(w,e));else{const w=[];for(const J of l)w.push(g(l[J],e));S.push(w)}}}catch(o){throw o}return D.convertJsonToArcade(S,z(e),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{St as registerFunctions};
