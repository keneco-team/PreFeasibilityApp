import{y as a,A as n,bC as d,bD as u,P as l}from"./index-C5fQgfn7.js";import{r as g}from"./FeatureLayerView2D-Ql3WgbIY.js";import"./EffectView-BUvCEInV.js";import"./featureConversionUtils-DMSUDuty.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CEn8-4h5.js";import"./highlightReasons-C0YeEq8N.js";import"./LayerView-pTrgC3xg.js";import"./Container-IZuU79Jc.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-Ru4uY3uI.js";import"./TechniqueInstance-BHuWh3Pw.js";import"./UpdateTracking2D-BFf2_89l.js";import"./BindType-BmZEZMMh.js";import"./Util-CUHztPaE.js";import"./Program-GYUfFrHm.js";import"./LabelMetric-BZpdRkX0.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-bta1_PV-.js";import"./TileContainer-CNxkrexi.js";import"./WGLContainer-B6wjANgj.js";import"./ProgramTemplate-BDgXMyPi.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-CW9JELxr.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./CIMSymbolHelper-CXnoiIzd.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-B4O2t5jv.js";import"./GeometryUtils-DvPWCH-9.js";import"./Rect-CUzevAry.js";import"./SDFHelper-DXLmilHj.js";import"./floatRGBA-C7l2SKEB.js";import"./FeatureCommandQueue-BMiEN7i4.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-BxAlxzjF.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-f7qPpYxq.js";import"./RefreshableLayerView-18y9HYBR.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ei=i;export{ei as default};
