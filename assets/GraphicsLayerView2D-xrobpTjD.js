import{bD as o,aI as g,aH as m,O as n,t as a,y as p,z as l,A as c}from"./index-CZMOWvs5.js";import{t as d}from"./highlightReasons-6HfXfqS3.js";import{f as u,y as w}from"./LayerView-3bDxIRhk.js";import{t as y}from"./GraphicContainer-CAGTJ1is.js";import{V}from"./GraphicsView2D-BneW3oMW.js";import{e as f}from"./HighlightCounter-D8g_DSqc.js";import"./Container-kuV5opsD.js";import"./EffectView-D_G_5s5s.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-BNqYbkZC.js";import"./AGraphicContainer-CfjgHNn3.js";import"./TechniqueInstance-DgHXBTEu.js";import"./UpdateTracking2D-Cqhv4pJ_.js";import"./BindType-BmZEZMMh.js";import"./Util-ByDSkt4J.js";import"./Program-Dci1WHRn.js";import"./LabelMetric-BkfJajTJ.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-La1dlKbX.js";import"./TileContainer-CSylk0J7.js";import"./WGLContainer-CynuD454.js";import"./ProgramTemplate-Bv8YUfJC.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-DsX5Kk6p.js";import"./featureConversionUtils-COHlYDiR.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-pRciuTsZ.js";import"./CIMSymbolHelper-DMX6bCJ1.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-B58ofaX7.js";import"./GeometryUtils-C9bkbodH.js";import"./Rect-CUzevAry.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-Cix2EMyn.js";import"./TimeOnly-lx5afeOV.js";import"./timeSupport-REBZ15ko.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-zBOTXYOT.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(n);return e!=null&&e.length?(this._addHighlight(e,t),a(()=>this._removeHighlight(e,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightReason(r),h=d(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};p([l()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const mi=s;export{mi as default};
