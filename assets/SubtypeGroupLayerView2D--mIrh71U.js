import{y as a,A as n,by as d,bz as u,P as l}from"./index-dy8m9cik.js";import{r as g}from"./FeatureLayerView2D-k9SzOe3P.js";import"./EffectView-BE2pORTm.js";import"./featureConversionUtils-BvQJAaaO.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-8I8uI90e.js";import"./highlightReasons-JzkbEPBM.js";import"./LayerView-CSkEADIp.js";import"./Container-CZI7StLe.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-BOc44jdD.js";import"./TechniqueInstance-CZIfgoG5.js";import"./UpdateTracking2D-BoajDa8-.js";import"./BindType-BmZEZMMh.js";import"./Util-YplgXKEj.js";import"./Program-CV0PgOOi.js";import"./LabelMetric-BVt16GjQ.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-DyKv9qwO.js";import"./TileContainer-67E3sLUX.js";import"./WGLContainer-CfNEigTW.js";import"./ProgramTemplate-DxK9dEi-.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-CJdDwCIm.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./CIMSymbolHelper-DsExZiFF.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-DkmEuFik.js";import"./GeometryUtils-Da04FgiZ.js";import"./Rect-CUzevAry.js";import"./SDFHelper-Bg3uhzBP.js";import"./floatRGBA-D7JExZXZ.js";import"./FeatureCommandQueue-DpVsaaBr.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-CP4DpU0F.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-RrvVZ7t7.js";import"./RefreshableLayerView-DLQ6S1bL.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ei=i;export{ei as default};
